% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ParameterTranslator.R
\name{ParameterTranslator}
\alias{ParameterTranslator}
\title{R6 class defining a parmater translator abstraction}
\description{
Configures a model for execution based translating model parameters from
  an object.  For example, as simple parameter translator may
  be used to configure a model from a simple vector of parameter values
  provided by an inferential modeling algorithm.

  This class is abstract and is not intended to be instantiated
  directly. Inheriting parameter translator classes are specific to a given 
  type of model input and the model that takes that input before execution.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model}}{The model object for which parameter values are changed by the
translator}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ParameterTranslator$new()}}
\item \href{#method-setModel}{\code{ParameterTranslator$setModel()}}
\item \href{#method-translate}{\code{ParameterTranslator$translate()}}
\item \href{#method-clone}{\code{ParameterTranslator$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterTranslator$new(model = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{The model for which the parameter translator generates input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setModel"></a>}}
\if{latex}{\out{\hypertarget{method-setModel}{}}}
\subsection{Method \code{setModel()}}{
Set the model for which parameters are translated
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterTranslator$setModel(model)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{The model with parameters that are altered by calling 
the translate method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-translate"></a>}}
\if{latex}{\out{\hypertarget{method-translate}{}}}
\subsection{Method \code{translate()}}{
A class that inherits from ParameterTranslator must implement a 
  "translate" method that will reconfigure the model input according
  to the provided object representing model parameters. 

  This method declaration will cause a program to fail if 
  the method is called and the implementing class does not override it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterTranslator$translate(params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{Parameter values}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterTranslator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
