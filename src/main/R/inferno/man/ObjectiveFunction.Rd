% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ObjectiveFunction.R
\name{ObjectiveFunction}
\alias{ObjectiveFunction}
\title{R6 class defining an Objective Function abstraction}
\description{
The R6 class generator for objects representing an objective function 
  used to calculate a value that represents agreement between model 
  predictions and observations. This abstract class defines the interface
  that is generally used by optimizations algorithms designed find the
  parameter values that predict the best fit of a model to measured data.
  See documentation of the propose method 
  as the primary method of interface from optimization algorithms.
  This class is abstract and is not intended to be instantiated
  directly. The constructor is only intended to be called by
  an extending subclass.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{params}}{Parameter values that generated the current objective function value}

\item{\code{model}}{Model (from simulator) used to generate the prediction that is 
compared to the observation}

\item{\code{simulator}}{Simulator used to generate the prediction that is 
compared to the observation}

\item{\code{prediction}}{The prediction that generated the current objective function value}

\item{\code{synthPrediction}}{A synthetic prediction (used for Monte Carlo realizations)}

\item{\code{observation}}{The observations to which predictions are compared}

\item{\code{observationGenerator}}{An optional observation generator that can be used to generate
artificial data for Monte Carlo realizations}

\item{\code{multivariateValues}}{The vector of values representing objective function value for 
each column of the observation
and prediction data frames. These values are summed to provide the
overall value of the objective function.}

\item{\code{value}}{The calculated value of the objective function for the last proposal}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ObjectiveFunction$new()}}
\item \href{#method-propose}{\code{ObjectiveFunction$propose()}}
\item \href{#method-realize}{\code{ObjectiveFunction$realize()}}
\item \href{#method-compare}{\code{ObjectiveFunction$compare()}}
\item \href{#method-plotFit}{\code{ObjectiveFunction$plotFit()}}
\item \href{#method-clone}{\code{ObjectiveFunction$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$new(
  simulator,
  observationGenerator = NULL,
  observation = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulator}}{The simulator (see \code{\link{Simulator}}) used to generate the predictions to be
compared to the observations by the objective function}

\item{\code{observationGenerator}}{An optional artificial observation generator object 
that can generate a synthetic observation based on some known structure
in error. By default this is null.  By setting to a valid object, this
will create a synthetic prediction from the current model configuration,
and then create a synthetic observation upon construction of the
objective function object. This feature and the "realize" method for
generating a new realization of synthetic error is designed to 
facilitatin Monte Carlo error propagation algorithms.}

\item{\code{observation}}{The observations to compare to the predictions
by the objective function. Observations should be a data frame with
the same number of rows and columns as the prediction.
 
Note that any observations provided as an
argument will be overwritten if a valid synthetic error processor is
provided. This argument defaults to a null value, so it is optional
if a synthetic error processor is provided. The object cannot be constructed
if the synthErrorProcessor and observation arguments are both NULL.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-propose"></a>}}
\if{latex}{\out{\hypertarget{method-propose}{}}}
\subsection{Method \code{propose()}}{
Proposes a model with a given permutation represented by a subset of
   input
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$propose(params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{The subset of input being proposed as a permutation}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the objective function
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-realize"></a>}}
\if{latex}{\out{\hypertarget{method-realize}{}}}
\subsection{Method \code{realize()}}{
Generates a new realization of the observation based on the observation generator
   provided. Will cause an error if called and an observation generator attribute
   is NULL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$realize()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The artificial observation created
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-compare"></a>}}
\if{latex}{\out{\hypertarget{method-compare}{}}}
\subsection{Method \code{compare()}}{
A class that inherits from ObjectiveFunction must implement a 
   "compare" method that will compare a prediciton to an observation. 

   This method declaration will cause a program to fail if 
   the method is called and the implementing class does not override it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$compare(params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{The object representing model parameters in the event that 
parameters are necessary for the comparison logic}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value calculated from the comparison
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotFit"></a>}}
\if{latex}{\out{\hypertarget{method-plotFit}{}}}
\subsection{Method \code{plotFit()}}{
Plots the prediction based on the provided parameters 
  on the same axes as the observations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$plotFit(
  params,
  x = numeric(),
  ylabs = as.list(names(self$observation)),
  lineArgs = list(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{Parameters for generating the prediction}

\item{\code{x}}{Optional vector of x-axis values for the plot.
Defaults to plotting x-axis as vector index.}

\item{\code{ylabs}}{Optional list of labels for y-axes on plots.
Defaults to names of list elements in the observations.}

\item{\code{lineArgs}}{List of arguments passed to the function creating
the lines for the predictions.
Defaults to no additional arguments 
(defaults for \code{lines()} function)}

\item{\code{...}}{Additional arguments are passed to the \code{plot()} function
that generates the axes and plots the observations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveFunction$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
